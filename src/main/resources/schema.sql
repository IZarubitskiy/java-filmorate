
create table if not exists genres
(
    id   long generated by default as identity primary key,
    name varchar(100) not null
);


create table if not exists users
(
    id       long generated by default as identity primary key,
    name     varchar(255),
    login    varchar(255) not null,
    birthday date         not null,
    email    varchar(255) not null
);

create table if not exists friendships
(
    user_id   long,
    friend_id long,
    confirmation bool,
    foreign key (user_id) references users (id) on delete cascade,
    foreign key (friend_id) references users (id) on delete cascade,
    primary key (user_id, friend_id)
);

create table if not exists mpas
(
    id   long generated by default as identity primary key,
    name varchar(100) not null
);

create table if not exists films
(
    id           long generated by default as identity primary key,
    name         varchar(255) not null,
    description  varchar(200),
    release_date date,
    duration     int,
    rate         long
);

create table if not exists likes
(
    film_id long,
    user_id long,
    foreign key (film_id) references films (id) on delete cascade,
    foreign key (user_id) references users (id) on delete cascade,
    primary key (film_id, user_id)
);

create table if not exists film_genres
(
    film_id  long,
    genre_id long,
    foreign key (film_id) references films (id) on delete cascade,
    foreign key (genre_id) references genres (id) on delete cascade,
    primary key (film_id, genre_id)
);

create table if not exists film_mpas
(
    mpa_id  long,
    film_id long,
    foreign key (mpa_id) references mpas (id) on delete cascade,
    foreign key (film_id) references films (id) on delete cascade,
    primary key (mpa_id, film_id)
);